{"version":3,"sources":["../app/app.js"],"names":["app","static_dir","__dirname","node_plugins","replace","dist","set","path","join","use","express","static","console","log","engine","require","renderFile","controllers","dir","match","recursive","map","name","isFile","requireAll","policies","_","each","routes","value","index","getApi","split","middleware","policy","val","ind","indexOf","change","push","toLowerCase","listen"],"mappings":"AAAA;;AACA;;AAEA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAFA;;AAPA;AAWA,IAAMA,MAAM,wBAAZ;AAAA,IACAC,aAAaC,YAAU,gBADvB;AAAA,IAEAC,eAAeF,WAAWG,OAAX,CAAmB,OAAnB,EAA2B,EAA3B,CAFf;AAAA,IAGAC,OAAOJ,WAAWG,OAAX,CAAmB,gBAAnB,EAAoC,EAApC,CAHP;AAIAJ,IAAIM,GAAJ,CAAQ,OAAR,EAAkBC,eAAKC,IAAL,CAAUN,SAAV,EAAqB,SAArB,CAAlB;AACAF,IAAIS,GAAJ,CAAQ,SAAR,EAAmBC,kBAAQC,MAAR,CAAeR,YAAf,CAAnB;AACAH,IAAIS,GAAJ,CAAQ,OAAR,EAAiBC,kBAAQC,MAAR,CAAeN,IAAf,CAAjB;;AAEAO,QAAQC,GAAR,CAAYV,YAAZ;AACA;AACAH,IAAIS,GAAJ,CAAQ,iCAAR;AACAT,IAAIc,MAAJ,CAAW,KAAX,EAAkBC,QAAQ,KAAR,EAAeC,UAAjC;AACAhB,IAAIM,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEA,IAAIW,cAAc,uBAAW;AAC5BC,MAAK,0BADuB,EACK;AACjCC,QAAO,kBAFqB;AAG5BC,YAAW,KAHiB;AAI5BC,MAAK,aAACC,IAAD,EAAOf,IAAP,EAAagB,MAAb;AAAA,SAAyBC,kBAAWH,GAAX,CAAeC,IAAf,EAAqBf,IAArB,EAA2BgB,MAA3B,EAAmCnB,OAAnC,CAA2C,cAA3C,EAA0D,EAA1D,CAAzB;AAAA;AAJuB,CAAX,CAAlB;AAAA,IAMAqB,WAAW,uBAAW;AACrBP,MAAK,wBADgB;AAEnBC,QAAO,cAFY,CAEI;AAFJ,CAAX,CANX;;AAWAO,qBAAEC,IAAF,CAAOC,gBAAP,EAAe,UAASC,KAAT,EAAgBC,KAAhB,EAAsB;AACpC,KAAIC,SAASD,MAAME,KAAN,CAAY,GAAZ,CAAb;AAAA,KACAzB,OAAOsB,MAAMG,KAAN,CAAY,GAAZ,CADP;AAAA,KAEAC,aAAa,EAFb;;AAIAP,sBAAEC,IAAF,CAAOO,mBAAO,UAAP,CAAP,EAA2B,UAASC,GAAT,EAAcC,GAAd,EAAkB;AAC5C,MAAG7B,KAAK,CAAL,KAAW6B,GAAX,IAAkB7B,KAAK,CAAL,KAAW4B,GAAhC,EAAoC;AACnCF,gBAAaE,IAAI5B,KAAK,CAAL,CAAJ,CAAb;AACA,UAAO,KAAP;AACA;AACD,EALD;;AAOAmB,sBAAEC,IAAF,CAAOM,UAAP,EAAmB,UAASE,GAAT,EAAcC,GAAd,EAAkB;AACpC,MAAGD,IAAIE,OAAJ,CAAY,QAAZ,IAAwB,CAAC,CAA5B,EAA+B;AAC9BJ,cAAWG,GAAX,IAAkBX,SAASU,GAAT,CAAlB;AACA;AACD,EAJD;;AAMA,KAAMG,SAASP,OAAO,CAAP,CAAf;AACAE,YAAWM,IAAX,CAAgBtB,YAAYV,KAAK,CAAL,CAAZ,EAAqBA,KAAK,CAAL,CAArB,CAAhB;AACAP,KAAIsC,OAAOE,WAAP,EAAJ,EAA0BT,OAAO,CAAP,CAA1B,EAAqC,gCAAQE,UAAR,CAArC;AACA,CArBD;;AAuBAjC,IAAIyC,MAAJ,CAAW,IAAX,EAAiB,YAAU;AAC1B7B,SAAQC,GAAR,CAAY,kBAAkB,IAA9B;AACA,CAFD","file":"app.js","sourcesContent":["'use strict'\r\nimport \"babel-polyfill\";\r\n//modules  \r\nimport express from 'express'\r\nimport requireAll from 'require.all'\r\nimport {compose} from 'compose-middleware'\r\nimport _ from 'underscore'\r\nimport validition from 'express-validator'\r\nimport path from 'path'\r\n//files\r\nimport routes from './application/config/routes'\r\nimport policy from './application/config/policies'\r\n\r\nconst app = express(),\r\nstatic_dir = __dirname+'/node_modules/',\r\nnode_plugins = static_dir.replace('dist/',''),\r\ndist = static_dir.replace('/node_modules/','')\r\napp.set('views',  path.join(__dirname, '/views/'))\r\napp.use('/assets', express.static(node_plugins))\r\napp.use('/dist', express.static(dist))\r\n\r\nconsole.log(node_plugins)\r\n// app.use('/view', express.static('public/template'))\r\napp.use(validition())\r\napp.engine('htm', require('ejs').renderFile)\r\napp.set('view engine', 'htm')\r\n\r\nlet controllers = requireAll({\r\n\tdir: './application/controller', //only files that end with 'controller.js' \r\n\tmatch: /Controller\\.js$/i,\r\n\trecursive: false,\r\n\tmap: (name, path, isFile ) => requireAll.map(name, path, isFile).replace(/Controller$/i,'')\r\n}),\r\npolicies = requireAll({\r\n\tdir: './application/policies',\r\n  \tmatch: /Policy\\.js$/i, //only files that end with 'controller.js' \r\n})\r\n\r\n_.each(routes, function(value, index){\r\n\tlet getApi = index.split(\" \"),\r\n\tpath = value.split(\".\"),\r\n\tmiddleware = []\r\n\r\n\t_.each(policy[\"policies\"], function(val, ind){\r\n\t\tif(path[0] == ind && path[1] in val){\r\n\t\t\tmiddleware = val[path[1]];\r\n\t\t\treturn false;\r\n\t\t}\r\n\t});\r\n\r\n\t_.each(middleware, function(val, ind){\r\n\t\tif(val.indexOf(\"Policy\") > -1 ){\r\n\t\t\tmiddleware[ind] = policies[val];\r\n\t\t}\r\n\t});\r\n\r\n\tconst change = getApi[0]\r\n\tmiddleware.push(controllers[path[0]][path[1]])\r\n\tapp[change.toLowerCase()](getApi[1], compose(middleware))\r\n})\r\n\r\napp.listen(4200, function(){\r\n\tconsole.log('running port ' + 4200)\r\n})"]}